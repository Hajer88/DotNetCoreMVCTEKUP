// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.FirstMVC._2024.Models;

#nullable disable

namespace Project.FirstMVC._2024.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240224215300_AddSchemaRelational")]
    partial class AddSchemaRelational
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("Project.FirstMVC._2024.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("membershiptype_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("membershiptype_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Project.FirstMVC._2024.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GenreId");

                    b.ToTable("genres");
                });

            modelBuilder.Entity("Project.FirstMVC._2024.Models.Membershiptype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("DiscountRate")
                        .HasColumnType("REAL");

                    b.Property<int>("DurationInMonth")
                        .HasColumnType("INTEGER");

                    b.Property<double>("SignUpFee")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Membershiptypes");
                });

            modelBuilder.Entity("Project.FirstMVC._2024.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("WithSubtitles")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("genre_id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("releaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("genre_id");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("Project.FirstMVC._2024.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("userModels");
                });

            modelBuilder.Entity("Project.FirstMVC._2024.Models.Customer", b =>
                {
                    b.HasOne("Project.FirstMVC._2024.Models.Membershiptype", "Membershiptype")
                        .WithMany("Customers")
                        .HasForeignKey("membershiptype_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membershiptype");
                });

            modelBuilder.Entity("Project.FirstMVC._2024.Models.Movie", b =>
                {
                    b.HasOne("Project.FirstMVC._2024.Models.Customer", null)
                        .WithMany("Movies")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Project.FirstMVC._2024.Models.Genre", "Genre")
                        .WithMany("movies")
                        .HasForeignKey("genre_id");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Project.FirstMVC._2024.Models.Customer", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Project.FirstMVC._2024.Models.Genre", b =>
                {
                    b.Navigation("movies");
                });

            modelBuilder.Entity("Project.FirstMVC._2024.Models.Membershiptype", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
